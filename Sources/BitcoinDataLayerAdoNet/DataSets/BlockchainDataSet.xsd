<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BlockchainDataSet" targetNamespace="http://tempuri.org/BlockchainDataSet.xsd" xmlns:mstns="http://tempuri.org/BlockchainDataSet.xsd" xmlns="http://tempuri.org/BlockchainDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BitcoinDatabaseConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BitcoinDatabaseConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BitcoinDataLayerAdoNet.Properties.Settings.GlobalReference.Default.BitcoinDatabaseConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BitcoinTransactionTableAdapter" GeneratorDataComponentClassName="BitcoinTransactionTableAdapter" Name="BitcoinTransaction" UserDataComponentName="BitcoinTransactionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BitcoinDatabaseConnectionString1 (Settings)" DbObjectName="BitcoinDatabase.dbo.BitcoinTransaction" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BitcoinTransaction] WHERE (([BitcoinTransactionId] = @Original_BitcoinTransactionId) AND ([BlockId] = @Original_BlockId) AND ([TransactionHash] = @Original_TransactionHash) AND ([TransactionVersion] = @Original_TransactionVersion) AND ([TransactionLockTime] = @Original_TransactionLockTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_TransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="TransactionHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionLockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionLockTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BitcoinTransaction] ([BitcoinTransactionId], [BlockId], [TransactionHash], [TransactionVersion], [TransactionLockTime]) VALUES (@BitcoinTransactionId, @BlockId, @TransactionHash, @TransactionVersion, @TransactionLockTime);
SELECT BitcoinTransactionId, BlockId, TransactionHash, TransactionVersion, TransactionLockTime FROM BitcoinTransaction WHERE (BitcoinTransactionId = @BitcoinTransactionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@TransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="TransactionHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionLockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionLockTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BitcoinTransactionId, BlockId, TransactionHash, TransactionVersion, TransactionLockTime FROM dbo.BitcoinTransaction</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BitcoinTransaction] SET [BitcoinTransactionId] = @BitcoinTransactionId, [BlockId] = @BlockId, [TransactionHash] = @TransactionHash, [TransactionVersion] = @TransactionVersion, [TransactionLockTime] = @TransactionLockTime WHERE (([BitcoinTransactionId] = @Original_BitcoinTransactionId) AND ([BlockId] = @Original_BlockId) AND ([TransactionHash] = @Original_TransactionHash) AND ([TransactionVersion] = @Original_TransactionVersion) AND ([TransactionLockTime] = @Original_TransactionLockTime));
SELECT BitcoinTransactionId, BlockId, TransactionHash, TransactionVersion, TransactionLockTime FROM BitcoinTransaction WHERE (BitcoinTransactionId = @BitcoinTransactionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@TransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="TransactionHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionLockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionLockTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_TransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="TransactionHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionLockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionLockTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BitcoinTransactionId" DataSetColumn="BitcoinTransactionId" />
              <Mapping SourceColumn="BlockId" DataSetColumn="BlockId" />
              <Mapping SourceColumn="TransactionHash" DataSetColumn="TransactionHash" />
              <Mapping SourceColumn="TransactionVersion" DataSetColumn="TransactionVersion" />
              <Mapping SourceColumn="TransactionLockTime" DataSetColumn="TransactionLockTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TransactionInputTableAdapter" GeneratorDataComponentClassName="TransactionInputTableAdapter" Name="TransactionInput" UserDataComponentName="TransactionInputTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BitcoinDatabaseConnectionString1 (Settings)" DbObjectName="BitcoinDatabase.dbo.TransactionInput" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TransactionInput] WHERE (([TransactionInputId] = @Original_TransactionInputId) AND ([BitcoinTransactionId] = @Original_BitcoinTransactionId) AND ((@IsNull_SourceTransactionOutputId = 1 AND [SourceTransactionOutputId] IS NULL) OR ([SourceTransactionOutputId] = @Original_SourceTransactionOutputId)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SourceTransactionOutputId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SourceTransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TransactionInput] ([TransactionInputId], [BitcoinTransactionId], [SourceTransactionOutputId]) VALUES (@TransactionInputId, @BitcoinTransactionId, @SourceTransactionOutputId);
SELECT TransactionInputId, BitcoinTransactionId, SourceTransactionOutputId FROM TransactionInput WHERE (TransactionInputId = @TransactionInputId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SourceTransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TransactionInputId, BitcoinTransactionId, SourceTransactionOutputId FROM dbo.TransactionInput</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TransactionInput] SET [TransactionInputId] = @TransactionInputId, [BitcoinTransactionId] = @BitcoinTransactionId, [SourceTransactionOutputId] = @SourceTransactionOutputId WHERE (([TransactionInputId] = @Original_TransactionInputId) AND ([BitcoinTransactionId] = @Original_BitcoinTransactionId) AND ((@IsNull_SourceTransactionOutputId = 1 AND [SourceTransactionOutputId] IS NULL) OR ([SourceTransactionOutputId] = @Original_SourceTransactionOutputId)));
SELECT TransactionInputId, BitcoinTransactionId, SourceTransactionOutputId FROM TransactionInput WHERE (TransactionInputId = @TransactionInputId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SourceTransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SourceTransactionOutputId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SourceTransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SourceTransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TransactionInputId" DataSetColumn="TransactionInputId" />
              <Mapping SourceColumn="BitcoinTransactionId" DataSetColumn="BitcoinTransactionId" />
              <Mapping SourceColumn="SourceTransactionOutputId" DataSetColumn="SourceTransactionOutputId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TransactionInputSourceTableAdapter" GeneratorDataComponentClassName="TransactionInputSourceTableAdapter" Name="TransactionInputSource" UserDataComponentName="TransactionInputSourceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BitcoinDatabaseConnectionString1 (Settings)" DbObjectName="BitcoinDatabase.dbo.TransactionInputSource" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TransactionInputSource] WHERE (([TransactionInputId] = @Original_TransactionInputId) AND ([SourceTransactionHash] = @Original_SourceTransactionHash) AND ((@IsNull_SourceTransactionOutputIndex = 1 AND [SourceTransactionOutputIndex] IS NULL) OR ([SourceTransactionOutputIndex] = @Original_SourceTransactionOutputIndex)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_SourceTransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="SourceTransactionHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SourceTransactionOutputIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceTransactionOutputIndex" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SourceTransactionOutputIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceTransactionOutputIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TransactionInputSource] ([TransactionInputId], [SourceTransactionHash], [SourceTransactionOutputIndex]) VALUES (@TransactionInputId, @SourceTransactionHash, @SourceTransactionOutputIndex);
SELECT TransactionInputId, SourceTransactionHash, SourceTransactionOutputIndex FROM TransactionInputSource WHERE (TransactionInputId = @TransactionInputId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@SourceTransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="SourceTransactionHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SourceTransactionOutputIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceTransactionOutputIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TransactionInputId, SourceTransactionHash, SourceTransactionOutputIndex FROM dbo.TransactionInputSource</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TransactionInputSource] SET [TransactionInputId] = @TransactionInputId, [SourceTransactionHash] = @SourceTransactionHash, [SourceTransactionOutputIndex] = @SourceTransactionOutputIndex WHERE (([TransactionInputId] = @Original_TransactionInputId) AND ([SourceTransactionHash] = @Original_SourceTransactionHash) AND ((@IsNull_SourceTransactionOutputIndex = 1 AND [SourceTransactionOutputIndex] IS NULL) OR ([SourceTransactionOutputIndex] = @Original_SourceTransactionOutputIndex)));
SELECT TransactionInputId, SourceTransactionHash, SourceTransactionOutputIndex FROM TransactionInputSource WHERE (TransactionInputId = @TransactionInputId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@SourceTransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="SourceTransactionHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SourceTransactionOutputIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceTransactionOutputIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_TransactionInputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionInputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_SourceTransactionHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="SourceTransactionHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SourceTransactionOutputIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceTransactionOutputIndex" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SourceTransactionOutputIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SourceTransactionOutputIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TransactionInputId" DataSetColumn="TransactionInputId" />
              <Mapping SourceColumn="SourceTransactionHash" DataSetColumn="SourceTransactionHash" />
              <Mapping SourceColumn="SourceTransactionOutputIndex" DataSetColumn="SourceTransactionOutputIndex" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TransactionOutputTableAdapter" GeneratorDataComponentClassName="TransactionOutputTableAdapter" Name="TransactionOutput" UserDataComponentName="TransactionOutputTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BitcoinDatabaseConnectionString1 (Settings)" DbObjectName="BitcoinDatabase.dbo.TransactionOutput" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TransactionOutput] WHERE (([TransactionOutputId] = @Original_TransactionOutputId) AND ([BitcoinTransactionId] = @Original_BitcoinTransactionId) AND ([OutputIndex] = @Original_OutputIndex) AND ([OutputValueBtc] = @Original_OutputValueBtc))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_TransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OutputIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_OutputValueBtc" Precision="20" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="OutputValueBtc" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TransactionOutput] ([TransactionOutputId], [BitcoinTransactionId], [OutputIndex], [OutputValueBtc], [OutputScript]) VALUES (@TransactionOutputId, @BitcoinTransactionId, @OutputIndex, @OutputValueBtc, @OutputScript);
SELECT TransactionOutputId, BitcoinTransactionId, OutputIndex, OutputValueBtc, OutputScript FROM TransactionOutput WHERE (TransactionOutputId = @TransactionOutputId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@TransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@OutputIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@OutputValueBtc" Precision="20" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="OutputValueBtc" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@OutputScript" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="OutputScript" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TransactionOutputId, BitcoinTransactionId, OutputIndex, OutputValueBtc, OutputScript FROM dbo.TransactionOutput</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TransactionOutput] SET [TransactionOutputId] = @TransactionOutputId, [BitcoinTransactionId] = @BitcoinTransactionId, [OutputIndex] = @OutputIndex, [OutputValueBtc] = @OutputValueBtc, [OutputScript] = @OutputScript WHERE (([TransactionOutputId] = @Original_TransactionOutputId) AND ([BitcoinTransactionId] = @Original_BitcoinTransactionId) AND ([OutputIndex] = @Original_OutputIndex) AND ([OutputValueBtc] = @Original_OutputValueBtc));
SELECT TransactionOutputId, BitcoinTransactionId, OutputIndex, OutputValueBtc, OutputScript FROM TransactionOutput WHERE (TransactionOutputId = @TransactionOutputId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@TransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@OutputIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@OutputValueBtc" Precision="20" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="OutputValueBtc" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@OutputScript" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="OutputScript" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_TransactionOutputId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="TransactionOutputId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BitcoinTransactionId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BitcoinTransactionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OutputIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_OutputValueBtc" Precision="20" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="OutputValueBtc" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TransactionOutputId" DataSetColumn="TransactionOutputId" />
              <Mapping SourceColumn="BitcoinTransactionId" DataSetColumn="BitcoinTransactionId" />
              <Mapping SourceColumn="OutputIndex" DataSetColumn="OutputIndex" />
              <Mapping SourceColumn="OutputValueBtc" DataSetColumn="OutputValueBtc" />
              <Mapping SourceColumn="OutputScript" DataSetColumn="OutputScript" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BlockTableAdapter" GeneratorDataComponentClassName="BlockTableAdapter" Name="Block" UserDataComponentName="BlockTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BitcoinDatabaseConnectionString1 (Settings)" DbObjectName="BitcoinDatabase.dbo.Block" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Block] WHERE (([BlockId] = @Original_BlockId) AND ([BlockFileId] = @Original_BlockFileId) AND ([BlockVersion] = @Original_BlockVersion) AND ([BlockHash] = @Original_BlockHash) AND ([PreviousBlockHash] = @Original_PreviousBlockHash) AND ([BlockTimestamp] = @Original_BlockTimestamp))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockFileId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockFileId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_BlockHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="BlockHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_PreviousBlockHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="PreviousBlockHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_BlockTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BlockTimestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Block] ([BlockId], [BlockFileId], [BlockVersion], [BlockHash], [PreviousBlockHash], [BlockTimestamp]) VALUES (@BlockId, @BlockFileId, @BlockVersion, @BlockHash, @PreviousBlockHash, @BlockTimestamp);
SELECT BlockId, BlockFileId, BlockVersion, BlockHash, PreviousBlockHash, BlockTimestamp FROM Block WHERE (BlockId = @BlockId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlockFileId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockFileId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlockVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@BlockHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="BlockHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@PreviousBlockHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="PreviousBlockHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@BlockTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BlockTimestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BlockId, BlockFileId, BlockVersion, BlockHash, PreviousBlockHash, BlockTimestamp FROM dbo.Block</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Block] SET [BlockId] = @BlockId, [BlockFileId] = @BlockFileId, [BlockVersion] = @BlockVersion, [BlockHash] = @BlockHash, [PreviousBlockHash] = @PreviousBlockHash, [BlockTimestamp] = @BlockTimestamp WHERE (([BlockId] = @Original_BlockId) AND ([BlockFileId] = @Original_BlockFileId) AND ([BlockVersion] = @Original_BlockVersion) AND ([BlockHash] = @Original_BlockHash) AND ([PreviousBlockHash] = @Original_PreviousBlockHash) AND ([BlockTimestamp] = @Original_BlockTimestamp));
SELECT BlockId, BlockFileId, BlockVersion, BlockHash, PreviousBlockHash, BlockTimestamp FROM Block WHERE (BlockId = @BlockId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlockFileId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockFileId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlockVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@BlockHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="BlockHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@PreviousBlockHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="PreviousBlockHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@BlockTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BlockTimestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_BlockId" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="BlockId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockFileId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockFileId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_BlockHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="BlockHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_PreviousBlockHash" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="PreviousBlockHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_BlockTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BlockTimestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BlockId" DataSetColumn="BlockId" />
              <Mapping SourceColumn="BlockFileId" DataSetColumn="BlockFileId" />
              <Mapping SourceColumn="BlockVersion" DataSetColumn="BlockVersion" />
              <Mapping SourceColumn="BlockHash" DataSetColumn="BlockHash" />
              <Mapping SourceColumn="PreviousBlockHash" DataSetColumn="PreviousBlockHash" />
              <Mapping SourceColumn="BlockTimestamp" DataSetColumn="BlockTimestamp" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BlockchainDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="BlockchainDataSet" msprop:Generator_UserDSName="BlockchainDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BitcoinTransaction" msprop:Generator_TableClassName="BitcoinTransactionDataTable" msprop:Generator_TableVarName="tableBitcoinTransaction" msprop:Generator_TablePropName="BitcoinTransaction" msprop:Generator_RowDeletingName="BitcoinTransactionRowDeleting" msprop:Generator_RowChangingName="BitcoinTransactionRowChanging" msprop:Generator_RowEvHandlerName="BitcoinTransactionRowChangeEventHandler" msprop:Generator_RowDeletedName="BitcoinTransactionRowDeleted" msprop:Generator_UserTableName="BitcoinTransaction" msprop:Generator_RowChangedName="BitcoinTransactionRowChanged" msprop:Generator_RowEvArgName="BitcoinTransactionRowChangeEvent" msprop:Generator_RowClassName="BitcoinTransactionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BitcoinTransactionId" msprop:Generator_ColumnVarNameInTable="columnBitcoinTransactionId" msprop:Generator_ColumnPropNameInRow="BitcoinTransactionId" msprop:Generator_ColumnPropNameInTable="BitcoinTransactionIdColumn" msprop:Generator_UserColumnName="BitcoinTransactionId" type="xs:long" />
              <xs:element name="BlockId" msprop:Generator_ColumnVarNameInTable="columnBlockId" msprop:Generator_ColumnPropNameInRow="BlockId" msprop:Generator_ColumnPropNameInTable="BlockIdColumn" msprop:Generator_UserColumnName="BlockId" type="xs:long" />
              <xs:element name="TransactionHash" msprop:Generator_ColumnVarNameInTable="columnTransactionHash" msprop:Generator_ColumnPropNameInRow="TransactionHash" msprop:Generator_ColumnPropNameInTable="TransactionHashColumn" msprop:Generator_UserColumnName="TransactionHash" type="xs:base64Binary" />
              <xs:element name="TransactionVersion" msprop:Generator_ColumnVarNameInTable="columnTransactionVersion" msprop:Generator_ColumnPropNameInRow="TransactionVersion" msprop:Generator_ColumnPropNameInTable="TransactionVersionColumn" msprop:Generator_UserColumnName="TransactionVersion" type="xs:int" />
              <xs:element name="TransactionLockTime" msprop:Generator_ColumnVarNameInTable="columnTransactionLockTime" msprop:Generator_ColumnPropNameInRow="TransactionLockTime" msprop:Generator_ColumnPropNameInTable="TransactionLockTimeColumn" msprop:Generator_UserColumnName="TransactionLockTime" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TransactionInput" msprop:Generator_TableClassName="TransactionInputDataTable" msprop:Generator_TableVarName="tableTransactionInput" msprop:Generator_TablePropName="TransactionInput" msprop:Generator_RowDeletingName="TransactionInputRowDeleting" msprop:Generator_RowChangingName="TransactionInputRowChanging" msprop:Generator_RowEvHandlerName="TransactionInputRowChangeEventHandler" msprop:Generator_RowDeletedName="TransactionInputRowDeleted" msprop:Generator_UserTableName="TransactionInput" msprop:Generator_RowChangedName="TransactionInputRowChanged" msprop:Generator_RowEvArgName="TransactionInputRowChangeEvent" msprop:Generator_RowClassName="TransactionInputRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TransactionInputId" msprop:Generator_ColumnVarNameInTable="columnTransactionInputId" msprop:Generator_ColumnPropNameInRow="TransactionInputId" msprop:Generator_ColumnPropNameInTable="TransactionInputIdColumn" msprop:Generator_UserColumnName="TransactionInputId" type="xs:long" />
              <xs:element name="BitcoinTransactionId" msprop:Generator_ColumnVarNameInTable="columnBitcoinTransactionId" msprop:Generator_ColumnPropNameInRow="BitcoinTransactionId" msprop:Generator_ColumnPropNameInTable="BitcoinTransactionIdColumn" msprop:Generator_UserColumnName="BitcoinTransactionId" type="xs:long" />
              <xs:element name="SourceTransactionOutputId" msprop:Generator_ColumnVarNameInTable="columnSourceTransactionOutputId" msprop:Generator_ColumnPropNameInRow="SourceTransactionOutputId" msprop:Generator_ColumnPropNameInTable="SourceTransactionOutputIdColumn" msprop:Generator_UserColumnName="SourceTransactionOutputId" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TransactionInputSource" msprop:Generator_TableClassName="TransactionInputSourceDataTable" msprop:Generator_TableVarName="tableTransactionInputSource" msprop:Generator_TablePropName="TransactionInputSource" msprop:Generator_RowDeletingName="TransactionInputSourceRowDeleting" msprop:Generator_RowChangingName="TransactionInputSourceRowChanging" msprop:Generator_RowEvHandlerName="TransactionInputSourceRowChangeEventHandler" msprop:Generator_RowDeletedName="TransactionInputSourceRowDeleted" msprop:Generator_UserTableName="TransactionInputSource" msprop:Generator_RowChangedName="TransactionInputSourceRowChanged" msprop:Generator_RowEvArgName="TransactionInputSourceRowChangeEvent" msprop:Generator_RowClassName="TransactionInputSourceRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TransactionInputId" msprop:Generator_ColumnVarNameInTable="columnTransactionInputId" msprop:Generator_ColumnPropNameInRow="TransactionInputId" msprop:Generator_ColumnPropNameInTable="TransactionInputIdColumn" msprop:Generator_UserColumnName="TransactionInputId" type="xs:long" />
              <xs:element name="SourceTransactionHash" msprop:Generator_ColumnVarNameInTable="columnSourceTransactionHash" msprop:Generator_ColumnPropNameInRow="SourceTransactionHash" msprop:Generator_ColumnPropNameInTable="SourceTransactionHashColumn" msprop:Generator_UserColumnName="SourceTransactionHash" type="xs:base64Binary" />
              <xs:element name="SourceTransactionOutputIndex" msprop:Generator_ColumnVarNameInTable="columnSourceTransactionOutputIndex" msprop:Generator_ColumnPropNameInRow="SourceTransactionOutputIndex" msprop:Generator_ColumnPropNameInTable="SourceTransactionOutputIndexColumn" msprop:Generator_UserColumnName="SourceTransactionOutputIndex" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TransactionOutput" msprop:Generator_TableClassName="TransactionOutputDataTable" msprop:Generator_TableVarName="tableTransactionOutput" msprop:Generator_TablePropName="TransactionOutput" msprop:Generator_RowDeletingName="TransactionOutputRowDeleting" msprop:Generator_RowChangingName="TransactionOutputRowChanging" msprop:Generator_RowEvHandlerName="TransactionOutputRowChangeEventHandler" msprop:Generator_RowDeletedName="TransactionOutputRowDeleted" msprop:Generator_UserTableName="TransactionOutput" msprop:Generator_RowChangedName="TransactionOutputRowChanged" msprop:Generator_RowEvArgName="TransactionOutputRowChangeEvent" msprop:Generator_RowClassName="TransactionOutputRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TransactionOutputId" msprop:Generator_ColumnVarNameInTable="columnTransactionOutputId" msprop:Generator_ColumnPropNameInRow="TransactionOutputId" msprop:Generator_ColumnPropNameInTable="TransactionOutputIdColumn" msprop:Generator_UserColumnName="TransactionOutputId" type="xs:long" />
              <xs:element name="BitcoinTransactionId" msprop:Generator_ColumnVarNameInTable="columnBitcoinTransactionId" msprop:Generator_ColumnPropNameInRow="BitcoinTransactionId" msprop:Generator_ColumnPropNameInTable="BitcoinTransactionIdColumn" msprop:Generator_UserColumnName="BitcoinTransactionId" type="xs:long" />
              <xs:element name="OutputIndex" msprop:Generator_ColumnVarNameInTable="columnOutputIndex" msprop:Generator_ColumnPropNameInRow="OutputIndex" msprop:Generator_ColumnPropNameInTable="OutputIndexColumn" msprop:Generator_UserColumnName="OutputIndex" type="xs:int" />
              <xs:element name="OutputValueBtc" msprop:Generator_ColumnVarNameInTable="columnOutputValueBtc" msprop:Generator_ColumnPropNameInRow="OutputValueBtc" msprop:Generator_ColumnPropNameInTable="OutputValueBtcColumn" msprop:Generator_UserColumnName="OutputValueBtc" type="xs:decimal" />
              <xs:element name="OutputScript" msprop:Generator_ColumnVarNameInTable="columnOutputScript" msprop:Generator_ColumnPropNameInRow="OutputScript" msprop:Generator_ColumnPropNameInTable="OutputScriptColumn" msprop:Generator_UserColumnName="OutputScript" type="xs:base64Binary" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Block" msprop:Generator_TableClassName="BlockDataTable" msprop:Generator_TableVarName="tableBlock" msprop:Generator_TablePropName="Block" msprop:Generator_RowDeletingName="BlockRowDeleting" msprop:Generator_RowChangingName="BlockRowChanging" msprop:Generator_RowEvHandlerName="BlockRowChangeEventHandler" msprop:Generator_RowDeletedName="BlockRowDeleted" msprop:Generator_UserTableName="Block" msprop:Generator_RowChangedName="BlockRowChanged" msprop:Generator_RowEvArgName="BlockRowChangeEvent" msprop:Generator_RowClassName="BlockRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BlockId" msprop:Generator_ColumnVarNameInTable="columnBlockId" msprop:Generator_ColumnPropNameInRow="BlockId" msprop:Generator_ColumnPropNameInTable="BlockIdColumn" msprop:Generator_UserColumnName="BlockId" type="xs:long" />
              <xs:element name="BlockFileId" msprop:Generator_ColumnVarNameInTable="columnBlockFileId" msprop:Generator_ColumnPropNameInRow="BlockFileId" msprop:Generator_ColumnPropNameInTable="BlockFileIdColumn" msprop:Generator_UserColumnName="BlockFileId" type="xs:int" />
              <xs:element name="BlockVersion" msprop:Generator_ColumnVarNameInTable="columnBlockVersion" msprop:Generator_ColumnPropNameInRow="BlockVersion" msprop:Generator_ColumnPropNameInTable="BlockVersionColumn" msprop:Generator_UserColumnName="BlockVersion" type="xs:int" />
              <xs:element name="BlockHash" msprop:Generator_ColumnVarNameInTable="columnBlockHash" msprop:Generator_ColumnPropNameInRow="BlockHash" msprop:Generator_ColumnPropNameInTable="BlockHashColumn" msprop:Generator_UserColumnName="BlockHash" type="xs:base64Binary" />
              <xs:element name="PreviousBlockHash" msprop:Generator_ColumnVarNameInTable="columnPreviousBlockHash" msprop:Generator_ColumnPropNameInRow="PreviousBlockHash" msprop:Generator_ColumnPropNameInTable="PreviousBlockHashColumn" msprop:Generator_UserColumnName="PreviousBlockHash" type="xs:base64Binary" />
              <xs:element name="BlockTimestamp" msprop:Generator_ColumnVarNameInTable="columnBlockTimestamp" msprop:Generator_ColumnPropNameInRow="BlockTimestamp" msprop:Generator_ColumnPropNameInTable="BlockTimestampColumn" msprop:Generator_UserColumnName="BlockTimestamp" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BitcoinTransaction" />
      <xs:field xpath="mstns:BitcoinTransactionId" />
    </xs:unique>
    <xs:unique name="TransactionInput_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TransactionInput" />
      <xs:field xpath="mstns:TransactionInputId" />
    </xs:unique>
    <xs:unique name="TransactionInputSource_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TransactionInputSource" />
      <xs:field xpath="mstns:TransactionInputId" />
    </xs:unique>
    <xs:unique name="TransactionOutput_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TransactionOutput" />
      <xs:field xpath="mstns:TransactionOutputId" />
    </xs:unique>
    <xs:unique name="Block_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Block" />
      <xs:field xpath="mstns:BlockId" />
    </xs:unique>
  </xs:element>
</xs:schema>