
. Increment the version in <...>\Sources\BitcoinDatabaseGenerator\Properties\AssemblyInfo.cs. Increment both AssemblyVersion and AssemblyFileVersion.

. Update the NuGetPackages as needed.

. Switch to Debug. Clean Solution / Rebuild Solution.

. Run all VS tests.

. Switch to Release. Clean Solution / Rebuild Solution.

. Run all VS tests.

. Rebuild the Bitcoin Database. Run:
    <...>\Sources\BitcoinDatabaseGenerator\bin\Release\BitcoinDatabaseGenerator.exe /BlockchainPath C:\Users\Ladi-Admin\AppData\Roaming\Bitcoin\blocks /SQLDbName BitcoinBlockchain /DropDB
  Save the output.

. Verify the database that was rebuilt against https://blockchain.info
    - Verify a few blocks. If the new code changes address blockchain format changes target some blocks that have that format change. 
      Use the SQL view: View_BlockAggregated
    - Verify a few transactions. If the new code changes address blockchain format changes target some transactions that have that format change. 
      Use the SQL view: View_TransactionAggregated

. Assuming all is OK, copy the output you saved earlier to:
    <...>\Docs\Logs\log.txt

. Close and reopen VS. Switch to Release. Clean Solution / Rebuild Solution.

. Collect the following files from 
  <...>\Sources\BitcoinDatabaseGenerator\bin\Release to a Separate folder and prepare a ZIP file:
        AdoNetHelpers.dll
        BitcoinBlockchain.dll
        BitcoinDatabaseGenerator.exe
        BitcoinDataLayerAdoNet.dll
        Microsoft.Threading.Tasks.dll
        Microsoft.Threading.Tasks.Extensions.Desktop.dll
        Microsoft.Threading.Tasks.Extensions.dll
        ResharperAnnotations.dll
        ZeroHelpers.dll

. Publish the new Release on GitHub.
